const settings = require('./settings/settings.json');
const ticket_info = require('./settings/ticket.json');


const Discord = require('discord.js');
const client = new Discord.Client();
const fs = require('fs');

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();

fs.readdir(__dirname + '/commands/', (err, files) => {
    if (err) console.error(err);
    let jsfiles = files.filter(file => file.split(".").pop() === 'js');
    jsfiles.forEach((file, i) => {
        let props = require(__dirname + `/commands/${file}`);
        if (props.run && props.help.name) {
            client.commands.set(props.help.name, props);
            if (props.help.aliases && Array.isArray(props.help.aliases)) {
                props.help.aliases.forEach(alias => {
                    client.aliases.set(alias, props.help.name);
                });
            }
            console.log(`Loading a total of ${files.length} commands.`);
        }
    });
});

fs.readdir(__dirname + '/events/', (err, files) => {
    if (err) console.error(err);
    console.log(`Loading a total of ${files.length} events.`);
    files.forEach(file => {
        const eventName = file.split(".")[0];
        const event = require(__dirname + `/events/${file}`);
        client.on(eventName, event.bind(null, client));
        delete require.cache[require.resolve(__dirname + `/events/${file}`)];
    });
});

client.on('message', message => {
    if (message.author.bot || message.channel.type !== 'text') return
    const messageArray = message.content.split(" ");
    const command = messageArray[0].slice(settings.prefix.length);
    const args = messageArray.slice(1);
    if (!message.content.startsWith(settings.prefix)) return;
    let commandfile = client.commands.get(command) || client.commands.get(client.aliases.get(command));
    if (commandfile) commandfile.run(client, message, args);
});

client.on('message', async message => {
    let image = null;

    var attachments = (message.attachments).array();
    if (attachments.length > 0) {
        image = attachments[0].attachment;
    }

    if (message.author.bot) return;

    const ticket = ticket_info.ticket_id.find(element => element === message.channel.id);
    if (!ticket) {
        return;
    }


    let thisUser = message.channel.topic;
    let user = await client.users.thisUser;
    let isUserInGuild = client.guilds.cache.get("804054717294444544").members.cache.get(thisUser)
    if (!isUserInGuild) {
    message.channel.delete();}
    if (message.content === '/close') return
    if (message.content) {
        user.send(`**Staff ${message.author.username} :** ${message.content}`)
    }
    if (image) {
        user.send(`**(Staff) ${message.author.username}:**`)
        user.send(image)
    }
})


client.on('ready', () => {
    console.log(`Connected | ${client.user.tag}`);
    client.user.setActivity(settings.activity);
});

client.login(settings.token);